/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip { chain-length = <27>; };

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "home-mod-left";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <250>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "home-mod-right";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <250>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        typing {
            bindings = <
&kp TAB  &kp Q            &kp W            &kp E                &kp R              &kp T        &kp Y    &kp U               &kp I                 &kp O            &kp P                     &kp BSPC
&trans   &hml LEFT_GUI A  &hml LEFT_ALT S  &hml LEFT_CONTROL D  &hml LEFT_SHIFT F  &kp G        &kp H    &hmr RIGHT_SHIFT J  &hmr RIGHT_CONTROL K  &hmr LEFT_ALT L  &hmr RIGHT_GUI SEMICOLON  &kp SQT
&trans   &kp Z            &kp X            &kp C                &kp V              &kp B        &kp N    &kp M               &kp COMMA             &kp DOT          &kp FSLH                  &kp ESC
                                           &mo 2                &mo 3              &kp SPACE    &kp RET  &mo 4               &mo 5
            >;
        };

        other {
            bindings = <
&kp TAB           &kp Q  &kp W  &kp E   &kp R   &kp T        &kp Y    &kp U   &kp I      &kp O    &kp P     &kp BSPC
&kp LEFT_CONTROL  &kp A  &kp S  &kp D   &kp F   &kp G        &kp H    &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_SHIFT    &kp Z  &kp X  &kp C   &kp V   &kp B        &kp N    &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                                &trans  &trans  &kp SPACE    &kp RET  &trans  &trans
            >;
        };

        nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans       &trans         &trans    &trans    &trans        &trans     &kp BSPC
&trans  &trans  &trans  &trans  &trans  &trans       &kp PAGE_UP    &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans       &kp PAGE_DOWN  &trans    &trans    &trans        &trans     &trans
                        &trans  &trans  &kp SPACE    &kp RET        &trans    &trans
            >;
        };

        num {
            bindings = <
&kp TAB  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5       &kp N6      &kp N7        &kp N8        &kp N9        &kp N0           &kp BSPC
&trans   &trans  &trans  &trans  &trans  &trans       &kp DOLLAR  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp KP_MULTIPLY  &kp KP_DIVIDE
&trans   &trans  &trans  &trans  &trans  &trans       &kp N0      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_PLUS      &kp KP_SUBTRACT
                         &trans  &trans  &kp SPACE    &kp RET     &trans        &trans
            >;
        };

        symbols {
            bindings = <
&kp TAB  &kp EXCL  &kp AT  &kp HASH       &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR              &kp DELETE
&trans   &trans    &trans  &kp BACKSLASH  &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp NON_US_BACKSLASH  &kp GRAVE
&trans   &trans    &trans  &trans         &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE              &kp TILDE
                           &trans         &trans    &kp SPACE    &kp RET    &trans     &trans
            >;
        };

        fn-sys {
            bindings = <
&soft_off   &kp C_BRI_DN  &kp C_BRI_UP  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_MUTE      &trans           &kp C_PREV       &kp C_PLAY_PAUSE  &kp C_NEXT       &kp PRINTSCREEN                 &soft_off
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2       &bt BT_SEL 3     &bt BT_SEL 4    &rgb_ug RGB_SAI  &rgb_ug RGB_SAD  &rgb_ug RGB_EFF   &rgb_ug RGB_EFR  &rgb_ug RGB_COLOR_HSB(0,0,100)  &rgb_ug RGB_TOG
&tog 1      &trans        &trans        &trans             &trans           &trans          &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &trans            &trans           &trans                          &studio_unlock
                                        &trans             &trans           &trans          &trans           &trans           &trans
            >;
        };
    };
};
